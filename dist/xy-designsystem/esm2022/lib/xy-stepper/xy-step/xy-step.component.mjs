import { Component, Input } from '@angular/core';
import * as i0 from "@angular/core";
import * as i1 from "@angular/common";
import * as i2 from "@angular/material/icon";
export class XyStepComponent {
    set collapse(b) {
        this._vertical = (b == 'true') || (b == '');
    }
    ;
    constructor() {
        this.stepNumber = 0;
        this.isLast = false;
        this.isFirst = false;
        this.currentStep = 1;
        this._vertical = false;
    }
    ngOnInit() {
    }
    ngDoCheck() {
        console.log(`ngDoCheck: ${this.stepNumber}`);
    }
    styleClass() {
        if (!this._vertical) {
            return '';
        }
        return 'test-1';
    }
    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "16.2.1", ngImport: i0, type: XyStepComponent, deps: [], target: i0.ɵɵFactoryTarget.Component }); }
    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "14.0.0", version: "16.2.1", type: XyStepComponent, selector: "xy-step", inputs: { _vertical: "_vertical", icon: "icon", collapse: "collapse" }, ngImport: i0, template: "<div class=\"xy-step\" [class]=\"styleClass()\">\r\n    <div class=\"grid\">\r\n        <div class=\"indicator\">\r\n            <ng-container \r\n                *ngIf=\"(currentStep <= stepNumber) ||\r\n                 (currentStep > stepNumber && isLast) ; then stepOngoing; else stepDone\">\r\n            </ng-container>\r\n            <ng-template #stepOngoing>\r\n                <span *ngIf=\"!icon\">{{stepNumber}}</span>\r\n                <mat-icon *ngIf=\"icon\">{{icon}}</mat-icon>\r\n            </ng-template>\r\n            <ng-template #stepDone>\r\n                <div *ngIf=\"!icon\" class=\"check\">{{stepNumber}}</div>\r\n                <mat-icon *ngIf=\"icon\" class=\"check\">{{icon}}</mat-icon>\r\n            </ng-template>\r\n            <div class=\"title\" >\r\n                <ng-content select=\"[step-title]\"></ng-content>\r\n            </div>\r\n        </div>\r\n       \r\n        <ng-container *ngIf=\"\r\n                (currentStep === stepNumber) || \r\n                (currentStep > stepNumber && isLast) || \r\n                (currentStep < stepNumber && isFirst)\">\r\n            <div class=\"divider\">\r\n                <div class=\"line\" *ngIf=\"!isLast\"></div>\r\n            </div>\r\n            <div class=\"content\">\r\n                <ng-content select=\"[step-content]\"></ng-content>\r\n                <ng-content select=\"[step-action]\"></ng-content>\r\n            </div>\r\n        </ng-container>\r\n    </div>\r\n</div>", styles: [".xy-step{position:relative}.title:after{content:\"\";position:absolute;width:100px;height:2px;background:rgba(0,0,0,.1215686275);top:15px;left:20px;z-index:-1}.mat-icon{font-size:18px;width:auto;height:auto;line-height:28px}.grid{display:grid;grid-template-columns:30px 1fr;grid-template-rows:30px 9fr;grid-gap:5px 10px;margin-right:5rem}.grid .indicator{background-color:#fff;border:1px solid rgba(0,0,0,.1215686275);border-radius:50%;text-align:center;font-size:12px;color:#0000001f}.grid .indicator span{font-size:18px}.grid .indicator .check~:after{background-color:#004f9b!important}.grid .title{color:#004f9b;line-height:20px;font-weight:700;width:37px;position:initial}.grid .content{margin-bottom:10px;top:50px;left:19px;width:900px;margin-top:3rem}.grid .divider{position:relative}.grid .line{position:absolute;top:0;width:1px;box-sizing:border-box;left:50%}.grid .check{background-color:#004f9b;text-align:center;font-size:18px;width:100%;color:#fff;display:inline-block;border-radius:50%;border:1px solid #004f9b;height:100%;position:relative;top:-1px;left:-1px}.grid .mat-icon.check{background-color:#004f9b;text-align:center;font-size:18px;width:100%;color:#fff;display:inline-block;border-radius:50%;border:1px solid #004f9b;height:100%;position:relative;left:-1px;line-height:28px}:host-context(.dark-theme) .mat-icon{color:#39f}:host-context(.dark-theme) .title:after{background-color:#fff}:host-context(.dark-theme) .title{color:#fff}:host-context(.dark-theme) .indicator .check~:after{background-color:#39f!important}:host-context(.dark-theme) .check{background-color:#39f}:host-context(.dark-theme) .mat-icon.check{background-color:#39f}:host-context(.dark-theme) .grid .line{background-color:#fff!important}:host-context(.dark-theme) .mat-icon{color:#000;font-size:1rem;line-height:1.7}:host-context(.dark-theme) .grid .indicator{border:1px solid white!important}:host-context(.dark-theme) .grid .indicator span{font-size:1rem;line-height:1.7;font-weight:100;color:#000!important}::ng-deepxy-step:last-child .title:after{content:none!important}::ng-deep .vertical-stepper .xy-step{margin-top:25px}::ng-deep .vertical-stepper .title:after{content:none}::ng-deep .vertical-stepper .line{position:absolute;width:1px;box-sizing:border-box;left:-26px!important;top:58px!important;z-index:99999999;background:rgba(0,0,0,.1215686275)!important;height:100%!important}::ng-deep .vertical-stepper .grid .line{height:200px!important}::ng-deep .vertical-stepper .grid .content{margin-bottom:10px;margin-left:38px}\n"], dependencies: [{ kind: "directive", type: i1.NgIf, selector: "[ngIf]", inputs: ["ngIf", "ngIfThen", "ngIfElse"] }, { kind: "component", type: i2.MatIcon, selector: "mat-icon", inputs: ["color", "inline", "svgIcon", "fontSet", "fontIcon"], exportAs: ["matIcon"] }] }); }
}
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "16.2.1", ngImport: i0, type: XyStepComponent, decorators: [{
            type: Component,
            args: [{ selector: 'xy-step', template: "<div class=\"xy-step\" [class]=\"styleClass()\">\r\n    <div class=\"grid\">\r\n        <div class=\"indicator\">\r\n            <ng-container \r\n                *ngIf=\"(currentStep <= stepNumber) ||\r\n                 (currentStep > stepNumber && isLast) ; then stepOngoing; else stepDone\">\r\n            </ng-container>\r\n            <ng-template #stepOngoing>\r\n                <span *ngIf=\"!icon\">{{stepNumber}}</span>\r\n                <mat-icon *ngIf=\"icon\">{{icon}}</mat-icon>\r\n            </ng-template>\r\n            <ng-template #stepDone>\r\n                <div *ngIf=\"!icon\" class=\"check\">{{stepNumber}}</div>\r\n                <mat-icon *ngIf=\"icon\" class=\"check\">{{icon}}</mat-icon>\r\n            </ng-template>\r\n            <div class=\"title\" >\r\n                <ng-content select=\"[step-title]\"></ng-content>\r\n            </div>\r\n        </div>\r\n       \r\n        <ng-container *ngIf=\"\r\n                (currentStep === stepNumber) || \r\n                (currentStep > stepNumber && isLast) || \r\n                (currentStep < stepNumber && isFirst)\">\r\n            <div class=\"divider\">\r\n                <div class=\"line\" *ngIf=\"!isLast\"></div>\r\n            </div>\r\n            <div class=\"content\">\r\n                <ng-content select=\"[step-content]\"></ng-content>\r\n                <ng-content select=\"[step-action]\"></ng-content>\r\n            </div>\r\n        </ng-container>\r\n    </div>\r\n</div>", styles: [".xy-step{position:relative}.title:after{content:\"\";position:absolute;width:100px;height:2px;background:rgba(0,0,0,.1215686275);top:15px;left:20px;z-index:-1}.mat-icon{font-size:18px;width:auto;height:auto;line-height:28px}.grid{display:grid;grid-template-columns:30px 1fr;grid-template-rows:30px 9fr;grid-gap:5px 10px;margin-right:5rem}.grid .indicator{background-color:#fff;border:1px solid rgba(0,0,0,.1215686275);border-radius:50%;text-align:center;font-size:12px;color:#0000001f}.grid .indicator span{font-size:18px}.grid .indicator .check~:after{background-color:#004f9b!important}.grid .title{color:#004f9b;line-height:20px;font-weight:700;width:37px;position:initial}.grid .content{margin-bottom:10px;top:50px;left:19px;width:900px;margin-top:3rem}.grid .divider{position:relative}.grid .line{position:absolute;top:0;width:1px;box-sizing:border-box;left:50%}.grid .check{background-color:#004f9b;text-align:center;font-size:18px;width:100%;color:#fff;display:inline-block;border-radius:50%;border:1px solid #004f9b;height:100%;position:relative;top:-1px;left:-1px}.grid .mat-icon.check{background-color:#004f9b;text-align:center;font-size:18px;width:100%;color:#fff;display:inline-block;border-radius:50%;border:1px solid #004f9b;height:100%;position:relative;left:-1px;line-height:28px}:host-context(.dark-theme) .mat-icon{color:#39f}:host-context(.dark-theme) .title:after{background-color:#fff}:host-context(.dark-theme) .title{color:#fff}:host-context(.dark-theme) .indicator .check~:after{background-color:#39f!important}:host-context(.dark-theme) .check{background-color:#39f}:host-context(.dark-theme) .mat-icon.check{background-color:#39f}:host-context(.dark-theme) .grid .line{background-color:#fff!important}:host-context(.dark-theme) .mat-icon{color:#000;font-size:1rem;line-height:1.7}:host-context(.dark-theme) .grid .indicator{border:1px solid white!important}:host-context(.dark-theme) .grid .indicator span{font-size:1rem;line-height:1.7;font-weight:100;color:#000!important}::ng-deepxy-step:last-child .title:after{content:none!important}::ng-deep .vertical-stepper .xy-step{margin-top:25px}::ng-deep .vertical-stepper .title:after{content:none}::ng-deep .vertical-stepper .line{position:absolute;width:1px;box-sizing:border-box;left:-26px!important;top:58px!important;z-index:99999999;background:rgba(0,0,0,.1215686275)!important;height:100%!important}::ng-deep .vertical-stepper .grid .line{height:200px!important}::ng-deep .vertical-stepper .grid .content{margin-bottom:10px;margin-left:38px}\n"] }]
        }], ctorParameters: function () { return []; }, propDecorators: { _vertical: [{
                type: Input
            }], icon: [{
                type: Input
            }], collapse: [{
                type: Input
            }] } });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoieHktc3RlcC5jb21wb25lbnQuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi8uLi8uLi9wcm9qZWN0cy94eS1kZXNpZ25zeXN0ZW0vc3JjL2xpYi94eS1zdGVwcGVyL3h5LXN0ZXAveHktc3RlcC5jb21wb25lbnQudHMiLCIuLi8uLi8uLi8uLi8uLi8uLi9wcm9qZWN0cy94eS1kZXNpZ25zeXN0ZW0vc3JjL2xpYi94eS1zdGVwcGVyL3h5LXN0ZXAveHktc3RlcC5jb21wb25lbnQuaHRtbCJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxPQUFPLEVBQUUsU0FBUyxFQUFFLEtBQUssRUFBVSxNQUFNLGVBQWUsQ0FBQzs7OztBQU96RCxNQUFNLE9BQU8sZUFBZTtJQU8xQixJQUFhLFFBQVEsQ0FBQyxDQUF3QjtRQUM1QyxJQUFJLENBQUMsU0FBUyxHQUFFLENBQUMsQ0FBQyxJQUFJLE1BQU0sQ0FBQyxJQUFJLENBQUMsQ0FBQyxJQUFJLEVBQUUsQ0FBQyxDQUFDO0lBQzdDLENBQUM7SUFBQSxDQUFDO0lBQ0Y7UUFUQSxlQUFVLEdBQUcsQ0FBQyxDQUFDO1FBQ2YsV0FBTSxHQUFHLEtBQUssQ0FBQztRQUNmLFlBQU8sR0FBRyxLQUFLLENBQUM7UUFDaEIsZ0JBQVcsR0FBRyxDQUFDLENBQUM7UUFDUCxjQUFTLEdBQVksS0FBSyxDQUFDO0lBTXBDLENBQUM7SUFFRCxRQUFRO0lBQ1IsQ0FBQztJQUVELFNBQVM7UUFDUCxPQUFPLENBQUMsR0FBRyxDQUFDLGNBQWMsSUFBSSxDQUFDLFVBQVUsRUFBRSxDQUFDLENBQUM7SUFDL0MsQ0FBQztJQUVELFVBQVU7UUFDUixJQUFHLENBQUMsSUFBSSxDQUFDLFNBQVMsRUFBQztZQUNqQixPQUFPLEVBQUUsQ0FBQTtTQUNWO1FBRUQsT0FBTyxRQUFRLENBQUM7SUFDbEIsQ0FBQzs4R0ExQlUsZUFBZTtrR0FBZixlQUFlLHVIQ1A1Qix1OUNBaUNNOzsyRkQxQk8sZUFBZTtrQkFMM0IsU0FBUzsrQkFDRSxTQUFTOzBFQVNWLFNBQVM7c0JBQWpCLEtBQUs7Z0JBQ0csSUFBSTtzQkFBWixLQUFLO2dCQUNPLFFBQVE7c0JBQXBCLEtBQUsiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBDb21wb25lbnQsIElucHV0LCBPbkluaXQgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcclxuXHJcbkBDb21wb25lbnQoe1xyXG4gIHNlbGVjdG9yOiAneHktc3RlcCcsXHJcbiAgdGVtcGxhdGVVcmw6ICcuL3h5LXN0ZXAuY29tcG9uZW50Lmh0bWwnLFxyXG4gIHN0eWxlVXJsczogWycuL3h5LXN0ZXAuY29tcG9uZW50LnNjc3MnXVxyXG59KVxyXG5leHBvcnQgY2xhc3MgWHlTdGVwQ29tcG9uZW50IGltcGxlbWVudHMgT25Jbml0IHtcclxuICBzdGVwTnVtYmVyID0gMDtcclxuICBpc0xhc3QgPSBmYWxzZTtcclxuICBpc0ZpcnN0ID0gZmFsc2U7XHJcbiAgY3VycmVudFN0ZXAgPSAxO1xyXG4gIEBJbnB1dCgpIF92ZXJ0aWNhbDogYm9vbGVhbiA9IGZhbHNlO1xyXG4gIEBJbnB1dCgpIGljb24hIDogc3RyaW5nO1xyXG4gIEBJbnB1dCgpIHNldCBjb2xsYXBzZShiOiAndHJ1ZScgfCAnZmFsc2UnIHwgJycpIHtcclxuICAgIHRoaXMuX3ZlcnRpY2FsPSAoYiA9PSAndHJ1ZScpIHx8IChiID09ICcnKTtcclxuICB9O1xyXG4gIGNvbnN0cnVjdG9yKCkge1xyXG4gIH1cclxuXHJcbiAgbmdPbkluaXQoKSB7XHJcbiAgfVxyXG5cclxuICBuZ0RvQ2hlY2soKSB7XHJcbiAgICBjb25zb2xlLmxvZyhgbmdEb0NoZWNrOiAke3RoaXMuc3RlcE51bWJlcn1gKTtcclxuICB9XHJcblxyXG4gIHN0eWxlQ2xhc3MoKSB7XHJcbiAgICBpZighdGhpcy5fdmVydGljYWwpe1xyXG4gICAgICByZXR1cm4gJydcclxuICAgIH1cclxuICAgXHJcbiAgICByZXR1cm4gJ3Rlc3QtMSc7XHJcbiAgfVxyXG59XHJcbiIsIjxkaXYgY2xhc3M9XCJ4eS1zdGVwXCIgW2NsYXNzXT1cInN0eWxlQ2xhc3MoKVwiPlxyXG4gICAgPGRpdiBjbGFzcz1cImdyaWRcIj5cclxuICAgICAgICA8ZGl2IGNsYXNzPVwiaW5kaWNhdG9yXCI+XHJcbiAgICAgICAgICAgIDxuZy1jb250YWluZXIgXHJcbiAgICAgICAgICAgICAgICAqbmdJZj1cIihjdXJyZW50U3RlcCA8PSBzdGVwTnVtYmVyKSB8fFxyXG4gICAgICAgICAgICAgICAgIChjdXJyZW50U3RlcCA+IHN0ZXBOdW1iZXIgJiYgaXNMYXN0KSA7IHRoZW4gc3RlcE9uZ29pbmc7IGVsc2Ugc3RlcERvbmVcIj5cclxuICAgICAgICAgICAgPC9uZy1jb250YWluZXI+XHJcbiAgICAgICAgICAgIDxuZy10ZW1wbGF0ZSAjc3RlcE9uZ29pbmc+XHJcbiAgICAgICAgICAgICAgICA8c3BhbiAqbmdJZj1cIiFpY29uXCI+e3tzdGVwTnVtYmVyfX08L3NwYW4+XHJcbiAgICAgICAgICAgICAgICA8bWF0LWljb24gKm5nSWY9XCJpY29uXCI+e3tpY29ufX08L21hdC1pY29uPlxyXG4gICAgICAgICAgICA8L25nLXRlbXBsYXRlPlxyXG4gICAgICAgICAgICA8bmctdGVtcGxhdGUgI3N0ZXBEb25lPlxyXG4gICAgICAgICAgICAgICAgPGRpdiAqbmdJZj1cIiFpY29uXCIgY2xhc3M9XCJjaGVja1wiPnt7c3RlcE51bWJlcn19PC9kaXY+XHJcbiAgICAgICAgICAgICAgICA8bWF0LWljb24gKm5nSWY9XCJpY29uXCIgY2xhc3M9XCJjaGVja1wiPnt7aWNvbn19PC9tYXQtaWNvbj5cclxuICAgICAgICAgICAgPC9uZy10ZW1wbGF0ZT5cclxuICAgICAgICAgICAgPGRpdiBjbGFzcz1cInRpdGxlXCIgPlxyXG4gICAgICAgICAgICAgICAgPG5nLWNvbnRlbnQgc2VsZWN0PVwiW3N0ZXAtdGl0bGVdXCI+PC9uZy1jb250ZW50PlxyXG4gICAgICAgICAgICA8L2Rpdj5cclxuICAgICAgICA8L2Rpdj5cclxuICAgICAgIFxyXG4gICAgICAgIDxuZy1jb250YWluZXIgKm5nSWY9XCJcclxuICAgICAgICAgICAgICAgIChjdXJyZW50U3RlcCA9PT0gc3RlcE51bWJlcikgfHwgXHJcbiAgICAgICAgICAgICAgICAoY3VycmVudFN0ZXAgPiBzdGVwTnVtYmVyICYmIGlzTGFzdCkgfHwgXHJcbiAgICAgICAgICAgICAgICAoY3VycmVudFN0ZXAgPCBzdGVwTnVtYmVyICYmIGlzRmlyc3QpXCI+XHJcbiAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJkaXZpZGVyXCI+XHJcbiAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPVwibGluZVwiICpuZ0lmPVwiIWlzTGFzdFwiPjwvZGl2PlxyXG4gICAgICAgICAgICA8L2Rpdj5cclxuICAgICAgICAgICAgPGRpdiBjbGFzcz1cImNvbnRlbnRcIj5cclxuICAgICAgICAgICAgICAgIDxuZy1jb250ZW50IHNlbGVjdD1cIltzdGVwLWNvbnRlbnRdXCI+PC9uZy1jb250ZW50PlxyXG4gICAgICAgICAgICAgICAgPG5nLWNvbnRlbnQgc2VsZWN0PVwiW3N0ZXAtYWN0aW9uXVwiPjwvbmctY29udGVudD5cclxuICAgICAgICAgICAgPC9kaXY+XHJcbiAgICAgICAgPC9uZy1jb250YWluZXI+XHJcbiAgICA8L2Rpdj5cclxuPC9kaXY+Il19