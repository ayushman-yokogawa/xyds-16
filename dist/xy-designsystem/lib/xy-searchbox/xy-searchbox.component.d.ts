import { AfterViewInit, ElementRef, EventEmitter, QueryList } from '@angular/core';
import { ControlValueAccessor, FormControl } from "@angular/forms";
import { ErrorStateMatcher } from "@angular/material/core";
import { MatLegacyLabel as MatLabel } from "@angular/material/legacy-form-field";
import { MatLegacyInput as MatInput } from "@angular/material/legacy-input";
import { XyHintComponent } from "../xy-hint/xy-hint.component";
import { XyErrorComponent } from "../xy-error/xy-error.component";
import * as i0 from "@angular/core";
export declare class XySearchboxComponent implements AfterViewInit, ControlValueAccessor {
    placeholder: string;
    formControl: FormControl;
    errorStateMatcher: ErrorStateMatcher;
    search: EventEmitter<{
        value: string;
    }>;
    searchControl: FormControl;
    autocomplete: string;
    reset: EventEmitter<any>;
    _disabled: boolean;
    set disabled(s: string | boolean);
    get disabled(): boolean;
    _incrementalSearch: boolean;
    set incrementalSearch(v: boolean | string);
    get incrementalSearch(): boolean;
    searched: boolean;
    hasError: boolean;
    changed: (value: string) => void;
    matLabel: MatLabel;
    input: MatInput;
    textInput: ElementRef;
    hint: XyHintComponent;
    errors: QueryList<XyErrorComponent>;
    private _onTouchedCallback;
    private _onChangeCallback;
    constructor();
    ngAfterViewInit(): void;
    set value(v: string);
    get value(): string;
    focus(options?: FocusOptions): void;
    blur(): void;
    updateErrorState(): void;
    writeValue(value: any): void;
    registerOnChange(fn: any): void;
    registerOnTouched(fn: any): void;
    setDisabledState(isDisabled: boolean): void;
    onChanged(event: Event): void;
    onChange($event: Event): void;
    onFocus($event: FocusEvent): void;
    onBlur($event: FocusEvent): void;
    onKeyUp($event: KeyboardEvent): void;
    onClickSearch($event: MouseEvent): void;
    onClickClear($event: MouseEvent): void;
    doReset(): void;
    doSearch(): void;
    styleClass(): string;
    static ɵfac: i0.ɵɵFactoryDeclaration<XySearchboxComponent, never>;
    static ɵcmp: i0.ɵɵComponentDeclaration<XySearchboxComponent, "xy-searchbox", never, { "placeholder": { "alias": "placeholder"; "required": false; }; "formControl": { "alias": "formControl"; "required": false; }; "errorStateMatcher": { "alias": "errorStateMatcher"; "required": false; }; "searchControl": { "alias": "searchControl"; "required": false; }; "autocomplete": { "alias": "autocomplete"; "required": false; }; "disabled": { "alias": "disabled"; "required": false; }; "incrementalSearch": { "alias": "incremental-search"; "required": false; }; "value": { "alias": "value"; "required": false; }; }, { "search": "search"; "reset": "reset"; }, ["hint", "errors"], never, false, never>;
}
