@use 'sass:map';
@use '@angular/material' as mat;
@use '../../../theme/xy-theme' as theme;

:host {
  position: relative;

  ::ng-deep {
    .mat-mdc-form-field-wrapper {
      padding-top: 0; //1.34375em;
    }

    .mat-mdc-form-field {
      font-family: theme.$base-font;
      min-width: 328px !important;

      .mat-mdc-form-field-label-wrapper {
        padding-top: 0.75rem;

        label {
          padding: 4px 12px;
          width: calc(100% - 32px);

          &.mat-mdc-form-field-label {
            top: 1.375rem;
          }
        }
      }
    }

    .mat-mdc-form-field-subscript-wrapper {
      margin-top: 4px;
    }

    .mat-mdc-form-field-hint-wrapper {
      margin-left: 18px;
      margin-right: 18px;
    }

    .mat-mdc-form-field:not(.mat-mdc-form-field-invalid):not(.xy-textarea-error):not(.mat-focused):not(.xy-textarea-readonly):not(.xy-textarea-edited) {
      .mat-mdc-form-field-label-wrapper {
        label {
          color: mat.get-color-from-palette(theme.$xy-base, 700);
        }
      }
    }

    .mat-mdc-form-field.mat-focused:not(.mat-mdc-form-field-invalid):not(.xy-textarea-error):not(.xy-textarea-readonly):not(.xy-textarea-success):not(.xy-textarea-edited) {
      .mat-mdc-form-field-label-wrapper {
        label {
          color: mat.get-color-from-palette(theme.$xy-primary, 500);
        }
      }
    }

    .mat-mdc-form-field.mat-mdc-form-field-invalid {
      .mat-mdc-form-field-label-wrapper {
        label {
          color: mat.get-color-from-palette(theme.$xy-error, A700);
        }
      }
    }

    .mat-mdc-form-field.xy-textarea-error {
      .mat-mdc-form-field-label-wrapper {
        label {
          color: mat.get-color-from-palette(theme.$xy-error, A700);
        }
      }
    }

    .mat-mdc-form-field.xy-textarea-success {
      .mat-mdc-form-field-label-wrapper {
        label {
          color: mat.get-color-from-palette(theme.$xy-safe_normal, A700);
        }
      }
    }

    .mat-mdc-form-field.xy-textarea-edited {
      .mat-mdc-form-field-label-wrapper {
        label {
          color: mat.get-color-from-palette(theme.$xy-base, 700);
        }
      }
    }

    .mat-mdc-form-field-can-float.mat-mdc-form-field-should-float .mat-mdc-form-field-label, .mat-mdc-form-field-can-float .mat-input-server:focus + .mat-mdc-form-field-label-wrapper .mat-mdc-form-field-label {
      transform: translateY(-10px) scale(0.75);
    }

    .mat-form-field-infix {
      padding: 0;
    }

    .mat-mdc-input-element {
      line-height: 1.6rem;
      margin-top: 15px;
      margin-bottom: 5px;
      resize: none;
    }
  }

  ::ng-deep .mat-mdc-form-field:not(.xy-textarea-disabled) {
    &.mat-mdc-form-field-appearance-standard .mat-mdc-form-field-underline {
      background-color: mat.get-color-from-palette(theme.$xy-primary, 700) !important;
    }

    .mat-mdc-form-field-flex {
      padding-top: 0 !important;
      background-color: theme.$xy-white;
      border-top-left-radius: 4px;
      border-top-right-radius: 4px;
    }

    .mat-hint {
      color: mat.get-color-from-palette(theme.$xy-base, 700) !important;
    }

    &.xy-textarea-readonly {
      .mat-mdc-form-field-label-wrapper {
        label {
          color: mat.get-color-from-palette(theme.$xy-base, 700);
        }
      }

      &.mat-focused, &:hover {
        .mat-mdc-form-field-ripple {
          background-color: mat.get-color-from-palette(theme.$xy-base, 400);
        }
      }

      .mat-mdc-form-field-flex {
        background-color: mat.get-color-from-palette(theme.$xy-disabled, 400, 0.05);
      }

      .mat-mdc-form-field-underline {
        background: mat.get-color-from-palette(theme.$xy-base, 400) !important;

        .mat-mdc-form-field-ripple {
          height: 1px !important;
        }
      }
    }

    &:not(.mat-mdc-form-field-invalid):not(.xy-textarea-error):not(.xy-textarea-readonly):not(.xy-textarea-success):not(.mat-focused):not(.xy-textarea-edited):hover {
      .mat-mdc-form-field-ripple {
        background-color: mat.get-color-from-palette(theme.$xy-primary, 700) !important;
      }
    }

    &:not(.mat-mdc-form-field-invalid):not(.xy-textarea-error):not(.xy-textarea-readonly):not(.xy-textarea-success):not(.xy-textarea-edited).mat-focused {
      .mat-mdc-form-field-ripple {
        background-color: mat.get-color-from-palette(theme.$xy-primary, 500) !important;
      }
    }

    &.mat-mdc-form-field-invalid {
      .mat-mdc-form-field-ripple {
        background-color: mat.get-color-from-palette(theme.$xy-error, A400) !important;
      }
    }

    &.xy-textarea-error {
      .mat-mdc-form-field-ripple {
        background-color: mat.get-color-from-palette(theme.$xy-error, A400) !important;
      }

      .mat-mdc-form-field-underline {
        background-color: mat.get-color-from-palette(theme.$xy-error, A400) !important;
      }

      .mat-hint {
        color: mat.get-color-from-palette(theme.$xy-error, A700) !important;
      }
    }

    &.xy-textarea-loading {
      .mat-mdc-form-field-ripple {
        background-color: mat.get-color-from-palette(theme.$xy-primary, 500) !important;
      }

      .mat-mdc-form-field-underline {
        background-color: mat.get-color-from-palette(theme.$xy-primary, 500) !important;
      }
    }

    &.xy-textarea-success {
      .mat-mdc-form-field-ripple {
        background-color: mat.get-color-from-palette(theme.$xy-safe_normal, A400) !important;
      }

      .mat-mdc-form-field-underline {
        background-color: mat.get-color-from-palette(theme.$xy-safe_normal, A400) !important;
      }

      .mat-hint {
        color: mat.get-color-from-palette(theme.$xy-safe_normal, A700) !important;
      }
    }

    &.xy-textarea-edited {
      .mat-mdc-form-field-ripple {
        background-color: mat.get-color-from-palette(theme.$xy-attention, A400) !important;
      }

      .mat-mdc-form-field-underline {
        background-color: mat.get-color-from-palette(theme.$xy-attention, A400) !important;
      }
    }
  }

  ::ng-deep .mat-mdc-form-field.xy-textarea-disabled {
    .mat-mdc-form-field-flex {
      background-color: transparent;
    }

    .mat-hint {
      color: mat.get-color-from-palette(theme.$xy-base, 400) !important;
    }

    .mat-mdc-form-field-label-wrapper {
      label {
        color: mat.get-color-from-palette(theme.$xy-base, 400) !important;
      }
    }

    &.mat-mdc-form-field-appearance-standard .mat-mdc-form-field-underline {
      background: mat.get-color-from-palette(theme.$xy-base, 400) !important;

      .mat-mdc-form-field-ripple {
        height: 1px !important;
        background-color: transparent !important;
      }
    }
  }

  ::ng-deep .mat-mdc-form-field.mat-mdc-form-field-required {
    .mat-mdc-form-field-label-wrapper {
      mat-label.angular12 {
        &::after {
          font-size: 0.75rem;
          content: 'ï¼Š';
          vertical-align: super;
        }
      }
    }
  }

  ::ng-deep .mat-mdc-form-field.mat-focused .mat-mdc-form-field-label .mat-mdc-form-field-required-marker {
    &:not(.xy-textarea-readonly) {
      color: mat.get-color-from-palette(theme.$xy-primary, 500) !important;
    }
  }

  ::ng-deep .mat-mdc-form-field.mat-mdc-form-field-invalid .mat-mdc-form-field-label .mat-mdc-form-field-required-marker {
    color: mat.get-color-from-palette(theme.$xy-error, A700) !important;
  }

  .mat-error {
    color: mat.get-color-from-palette(theme.$xy-error, A700) !important;
  }

  textarea {
    color: mat.get-color-from-palette(theme.$xy-base, 900) !important;
    padding: 4px 12px;
    width: calc(100% - 24px);


    &::placeholder {
      color: mat.get-color-from-palette(theme.$xy-base, 700) !important;
    }
  }

  ::ng-deep .mat-mdc-form-field.xy-textarea-disabled {
    textarea {
      color: mat.get-color-from-palette(theme.$xy-base, 500) !important;

      &::placeholder {
        color: mat.get-color-from-palette(theme.$xy-base, 500) !important;
      }
    }
  }

  .xy-textarea-icon {
    position: absolute;
    top: 0px;
    right: 12px;
    display: flex;
    width: 1.0rem;
    height: 1.0rem;
    border-radius: 50%;
    justify-content: center;
    align-items: center;

    mat-icon {
      width: 0.8125rem;
      height: 0.8125rem;
      font-size: 0.8125rem;
      font-weight: 400;
      line-height: 1;
    }
  }

  .xy-textarea-error-icon {
    background: mat.get-color-from-palette(theme.$xy-error, A400);

    mat-icon {
      color: theme.$xy-white;
      font-weight: 900;
    }
  }

  .xy-textarea-edited-icon {
    mat-icon {
      color: mat.get-color-from-palette(theme.$xy-attention, A400);
    }
  }

  .xy-textarea-success-icon {
    background: mat.get-color-from-palette(theme.$xy-safe_normal, A400);

    mat-icon {
      color: theme.$xy-white;
      font-weight: 900;
    }
  }

  .xy-textarea-loading-icon {
    position: absolute;
    top: 0px;
    right: 12px;
  }
  ::ng-deep .mat-mdc-form-field.xy-textarea-disabled {
    .xy-textarea-error-icon, .xy-textarea-success-icon {
      background: mat.get-color-from-palette(theme.$xy-base, 400);
    }

    .xy-textarea-edited-icon, .xy-textarea-loading-icon {
      mat-icon {
        color: mat.get-color-from-palette(theme.$xy-base, 400);
      }
    }
  }
}

:host-context(.dark-theme) {
  :host {
    ::ng-deep {
      .mat-mdc-form-field:not(.mat-mdc-form-field-invalid):not(.xy-textarea-error):not(.mat-focused):not(.xy-textarea-readonly) {
        .mat-mdc-form-field-label-wrapper {
          label {
            color: mat.get-color-from-palette(theme.$xy-dark-base, 50);
          }
        }
      }

      .mat-mdc-form-field.mat-focused:not(.mat-mdc-form-field-invalid):not(.xy-textarea-error):not(.xy-textarea-readonly):not(.xy-textarea-success) {
        .mat-mdc-form-field-label-wrapper {
          label {
            color: mat.get-color-from-palette(theme.$xy-dark-primary, 200);
          }
        }
      }

      .mat-mdc-form-field.mat-mdc-form-field-invalid {
        .mat-mdc-form-field-label-wrapper {
          label {
            color: mat.get-color-from-palette(theme.$xy-error, A200);
          }
        }
      }

      .mat-mdc-form-field.xy-textarea-error {
        .mat-mdc-form-field-label-wrapper {
          label {
            color: mat.get-color-from-palette(theme.$xy-error, A200);
          }
        }
      }

      .mat-mdc-form-field.xy-textarea-success {
        .mat-mdc-form-field-label-wrapper {
          label {
            color: mat.get-color-from-palette(theme.$xy-safe_normal, A200);
          }
        }
      }
    }

    ::ng-deep .mat-mdc-form-field:not(.xy-textarea-disabled) {
      &.mat-mdc-form-field-appearance-standard .mat-mdc-form-field-underline {
        background-color: mat.get-color-from-palette(theme.$xy-dark-primary, 500) !important;
      }

      .mat-mdc-form-field-flex {
        background-color: theme.$xy-black;
      }

      .mat-hint {
        color: mat.get-color-from-palette(theme.$xy-dark-base, 200) !important;
      }

      &.xy-textarea-readonly {
        .mat-mdc-form-field-label-wrapper {
          label {
            color: mat.get-color-from-palette(theme.$xy-dark-base, 200);
          }
        }
        &.mat-mdc-form-field-appearance-standard .mat-mdc-form-field-underline {
          background-color: mat.get-color-from-palette(theme.$xy-dark-base, 500) !important;
        }
        &.mat-focused, &:hover {
          .mat-mdc-form-field-ripple {
            background-color: mat.get-color-from-palette(theme.$xy-dark-base, 500);
          }
        }

        .mat-mdc-form-field-flex {
          background-color: mat.get-color-from-palette(theme.$xy-white-palette, 400, 0.2);
        }

          &.mat-mdc-form-field-invalid {
            .mat-mdc-form-field-ripple {
              background-color: mat.get-color-from-palette(theme.$xy-error, A400) !important;
            }
          }
          &.xy-textarea-error {
            .mat-mdc-form-field-ripple {
              background-color: mat.get-color-from-palette(theme.$xy-error, A400) !important;
            }
            .mat-mdc-form-field-underline {
              background-color: mat.get-color-from-palette(theme.$xy-error, A400) !important;
            }
            .mat-hint{
              color: mat.get-color-from-palette(theme.$xy-error, A200) !important;
            }
          }
          &.xy-textarea-loading {
            .mat-mdc-form-field-ripple {
              background-color: mat.get-color-from-palette(theme.$xy-dark-primary, 200) !important;
            }
            .mat-mdc-form-field-underline {
              background-color: mat.get-color-from-palette(theme.$xy-dark-primary, 200) !important;
            }
          }
          &.xy-textarea-success {
            .mat-mdc-form-field-ripple {
              background-color: mat.get-color-from-palette(theme.$xy-safe_normal, A400) !important;
            }
            .mat-mdc-form-field-underline {
              background-color: mat.get-color-from-palette(theme.$xy-safe_normal, A400) !important;
            }
            .mat-hint{
              color: mat.get-color-from-palette(theme.$xy-safe_normal, A200) !important;
            }
          }
          &.xy-textarea-edited {
            .mat-mdc-form-field-ripple {
              background-color: mat.get-color-from-palette(theme.$xy-attention, A400) !important;
            }
            .mat-mdc-form-field-underline {
              background-color: mat.get-color-from-palette(theme.$xy-attention, A400) !important;
            }
          }
      }

      &:not(.mat-mdc-form-field-invalid):not(.xy-textarea-error):not(.xy-textarea-readonly):not(.xy-textarea-success):not(.mat-focused):not(.xy-textarea-edited):hover {
        .mat-mdc-form-field-ripple {
          background-color: mat.get-color-from-palette(theme.$xy-dark-primary, 500) !important;
        }
      }

      &:not(.mat-mdc-form-field-invalid):not(.xy-textarea-error):not(.xy-textarea-readonly):not(.xy-textarea-success):not(.xy-textarea-edited).mat-focused {
        .mat-mdc-form-field-ripple {
          background-color: mat.get-color-from-palette(theme.$xy-dark-primary, 200) !important;
        }
      }

      &.mat-mdc-form-field-invalid {
        .mat-mdc-form-field-ripple {
          background-color: mat.get-color-from-palette(theme.$xy-error, A400) !important;
        }
      }

      &.xy-textarea-error {
        .mat-mdc-form-field-ripple {
          background-color: mat.get-color-from-palette(theme.$xy-error, A400) !important;
        }

        .mat-mdc-form-field-underline {
          background-color: mat.get-color-from-palette(theme.$xy-error, A400) !important;
        }

        .mat-hint {
          color: mat.get-color-from-palette(theme.$xy-error, A200) !important;
        }
      }

      &.xy-textarea-loading {
        .mat-mdc-form-field-ripple {
          background-color: mat.get-color-from-palette(theme.$xy-dark-primary, 200) !important;
        }

        .mat-mdc-form-field-underline {
          background-color: mat.get-color-from-palette(theme.$xy-dark-primary, 200) !important;
        }
      }

      &.xy-textarea-success {
        .mat-mdc-form-field-ripple {
          background-color: mat.get-color-from-palette(theme.$xy-safe_normal, A400) !important;
        }

        .mat-mdc-form-field-underline {
          background-color: mat.get-color-from-palette(theme.$xy-safe_normal, A400) !important;
        }

        .mat-hint {
          color: mat.get-color-from-palette(theme.$xy-safe_normal, A200) !important;
        }
      }

      &.xy-textarea-edited {
        .mat-mdc-form-field-ripple {
          background-color: mat.get-color-from-palette(theme.$xy-attention, A400) !important;
        }

        .mat-mdc-form-field-underline {
          background-color: mat.get-color-from-palette(theme.$xy-attention, A400) !important;
        }
      }
    }

    ::ng-deep .mat-mdc-form-field.xy-textarea-disabled {
      .mat-mdc-form-field-flex {
        background-color: transparent;
      }

      .mat-mdc-form-field {
        .mat-mdc-form-field-label-wrapper {
          label {
            color: mat.get-color-from-palette(theme.$xy-dark-base, 500) !important;
          }
        }
      }

      .mat-mdc-form-field-appearance-standard .mat-mdc-form-field-underline {
        background: mat.get-color-from-palette(theme.$xy-dark-base, 500) !important;

        .mat-mdc-form-field-ripple {
          background-color: transparent !important;
        }
      }
    }

    ::ng-deep .mat-mdc-form-field.mat-focused .mat-mdc-form-field-label .mat-mdc-form-field-required-marker {
      &:not(.xy-textarea-readonly) {
        color: mat.get-color-from-palette(theme.$xy-dark-primary, 500) !important;
      }
    }

    ::ng-deep .mat-mdc-form-field.mat-mdc-form-field-invalid .mat-mdc-form-field-label .mat-mdc-form-field-required-marker {
      color: mat.get-color-from-palette(theme.$xy-error, A700) !important;
    }

    .mat-error {
      color: mat.get-color-from-palette(theme.$xy-error, A700) !important;
    }

    textarea {
      color: mat.get-color-from-palette(theme.$xy-dark-base, 50) !important;

      &::placeholder {
        color: mat.get-color-from-palette(theme.$xy-dark-base, 200) !important;
      }
    }

    ::ng-deep .mat-mdc-form-field.xy-textarea-disabled {
      textarea {
        color: mat.get-color-from-palette(theme.$xy-dark-base, 500) !important;

        &::placeholder {
          color: mat.get-color-from-palette(theme.$xy-dark-base, 500) !important;
        }
      }
    }

    .xy-textarea-error-icon {
      background: mat.get-color-from-palette(theme.$xy-error, A400);

      mat-icon {
        color: theme.$xy-white;
      }
    }

    .xy-textarea-loading-icon {
      mat-icon {
        color: mat.get-color-from-palette(theme.$xy-dark-primary, 500);
      }
    }

    .xy-textarea-edited-icon{
      mat-icon{
        color: mat.get-color-from-palette(theme.$xy-attention, A400);
      }
    }

    .xy-textarea-success-icon {
      background: mat.get-color-from-palette(theme.$xy-safe_normal, A400);

      mat-icon {
        color: theme.$xy-white;
      }
    }
  }
}
